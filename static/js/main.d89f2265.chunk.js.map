{"version":3,"sources":["AppContext.js","containers/register/Register.js","containers/init/Init.js","layouts/supporter/Supporter.js","layouts/admin/NewSchool.js","layouts/admin/ListSupporters.js","layouts/admin/Messages.js","layouts/admin/EditSchool.js","layouts/admin/Admin.js","App.jsx","containers/new-user/NewUser.js","index.js"],"names":["React","createContext","Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onChangeInput","key","e","value","target","setState","_ref","form","objectSpread","defineProperty","_onSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","state","email","name","group","loading","register","alert","stop","desc","role","_this2","_this$state","blockMsg","display","isLocked","regForm","react_default","createElement","className","style","htmlFor","id","onChange","disabled","autoComplete","groups","keys","map","g","i","onClick","Component","register_Register","AppContext","Consumer","app","Register_Register","Init","server","process","Supporter","appendToMessageList","snap","msg","val","current","concat","toConsumableArray","updateConversation","userData","user","conversation","$tid","status","newConversations","conversations","filter","c","unshift","sort","b","lastMsg","time","_ref2","onClickConversation","open","text","messRef","off","firebase","ref","DB_PREFIX","orderByKey","limitToLast","on","preventDefault","currentUser","getIdToken","then","idToken","axios","post","tid","resp","data","error","catch","err","message","toggle","dropdown","out","window","confirm","ok","location","reload","greet","console","log","renderConversation","m","page","onSubmit","width","ButtonDropdown","isOpen","DropdownToggle","color","DropdownMenu","DropdownItem","placeholder","type","Icon_default","currentGroup","convRef","orderByChild","startAt","endAt","messagesEnd","createRef","prevProps","prevState","snapshot","length","animateScroll","scrollToBottom","containerId","_this$state2","bgRead","background-color","bgUnread","AppBar_default","position","background","Toolbar_default","Typography_default","variant","substring","supporter_Supporter","Supporter_Supporter","NewSchool","khoi","tự_nhiên","xã_hội","lực_lượng_vũ_trang","cao_đẳng_nghề","handleClose","handleSave","school","set","changeInput","changeCheckbox","checked","_this$props","Dialog_default","onClose","aria-labelledby","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","margin","label","fullWidth","FormControlLabel_default","control","Checkbox_default","DialogActions_default","Button_default","ListSupporters","updateUsers","users","decodeFirebaseArray","editUser","$uid","removeTempKeys","changeSwitch","equalTo","once","List_default","dense","ListItem_default","ListItemIcon_default","AccountCircle_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","IconButton_default","aria-label","Create_default","Switch_default","admin_ListSupporters","ListSupporters_ListSupporters","Messages","isnew","displayMessage","index_es","answeredBy","moment","format","Comment_default","admin_Messages","Messages_Messages","EditSchool","xoa_dau","str","replace","Admin","updateSchool","clickSchool","s","selectedSchool","messages","clickAllMessages","_addNewSchool","addNewSchool","editSchool","schoolRef","search","admin_NewSchool","assign","admin_EditSchool","toLowerCase","includes","toLocaleLowerCase","admin_Admin","Admin_Admin","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","_doLogin","urlParams","URLSearchParams","get","password","appState","signInWithEmailAndPassword","uId","_getUserInfo","uid","_doRegister","gr","createUserWithEmailAndPassword","_register","userId","_changeState","changedState","arr","id_name","Array","isArray","obj","nObj","forEach","startsWith","renderApp","combinedProps","src","init_Init","Provider","changeState","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","ReactDOM","render","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d89f2265.chunk.js","sourcesContent":["import React from 'react'\n\nexport default React.createContext({})","import React, {Component} from 'react'\nimport AppContext from '../../AppContext'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            form: {\n                email: this.props.email || '',\n                name: '',\n                group: '',\n                desc: '',\n                role: 0,\n            }\n        }\n    }\n\n    _onChangeInput = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value\n            }\n        }))\n    }\n\n    _onSubmit = async  () => {\n        const {form} = this.state\n        if (form.email && form.name && form.group) {\n            this.setState({\n                loading: true,\n            })\n            await this.props.register(form)\n            this.setState({\n                loading: false,\n            })\n        } else {\n            alert('Vui lòng điền đầy đủ thông tin')\n        }\n    }\n\n    render() {\n        const {form, loading} = this.state\n        var blockMsg = {\n\t\t\tdisplay: this.props.isLocked ? \"flex\" : \"none\"\n\t\t}\n\t\t\n\t\tvar regForm = {\n\t\t\tdisplay: this.props.isLocked ? \"none\" : \"flex\"\n\t\t}\n\n        return (\n            <div className=\"Register\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\" style={blockMsg}>\n                        Tài khoản của bạn chưa được kích hoạt.<br/>Bạn hãy đợi thêm hoặc thông báo với admin nhé!\n                    </div>\n                    <div className=\"card card-body Card\" style={regForm}>\n                        <small className={'text-muted'}>Trước tiên, bạn phải đăng ký thông tin tài khoản trước</small><br/>\n                        <label htmlFor={'email'}>Email</label>\n                        <input\n                            className={'form-control'}\n                            id={'email'}\n                            value={form.email}\n                            onChange={this._onChangeInput('email')}\n                            disabled\n                        />\n                        <label htmlFor={'name'}>Tên đầy đủ</label>\n                        <input\n                            className={'form-control'}\n                            value={form.name}\n                            id={'name'}\n                            autoComplete={'off'}\n                            onChange={this._onChangeInput('name')}\n                        />\n                        <label htmlFor={'group'}>Mã trường</label>\n                        <select\n                            className=\"custom-select\"\n                            value={form.group}\n                            id={'group'}\n                            onChange={this._onChangeInput('group')}\n                        >\n                            <option>Chọn một trường</option>\n                            {this.props.groups && Object.keys(this.props.groups).map((g, i) => <option\n                                key={i}\n                                value={g}\n                            >\n                                {this.props.groups[g].name}\n                            </option>)}\n                        </select>\n                        {/*<input*/}\n                            {/*className={'form-control'}*/}\n                            {/*value={form.group}*/}\n                            {/*id={'group'}*/}\n                            {/*onChange={this._onChangeInput('group')}*/}\n                            {/*autoComplete={'off'}*/}\n                        {/*/>*/}\n                        <label htmlFor={'desc'}>Lời chào</label>\n                        <input\n                            className={'form-control'}\n                            value={form.desc}\n                            id={'desc'}\n                            autoComplete={'off'}\n                            onChange={this._onChangeInput('desc')}\n                        />\n                        <button className={'btn btn-primary mt-3'} onClick={this._onSubmit} disabled={loading}>Đăng ký</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Register\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nclass Init extends Component {\n    render() {\n        return (\n            <div className=\"Register\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\">\n                        <small className={'text-muted'}>Đang setup tài khoản của bạn</small>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Init\n","import React, {Component} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport AppContext from '../../AppContext'\nimport * as firebase from 'firebase'\nimport axios from 'axios'\nimport {animateScroll} from 'react-scroll'\nimport ButtonDropdown from 'reactstrap/es/ButtonDropdown'\nimport DropdownToggle from 'reactstrap/es/DropdownToggle'\nimport DropdownMenu from 'reactstrap/es/DropdownMenu'\nimport DropdownItem from 'reactstrap/es/DropdownItem'\n\nconst server = process.env.REACT_APP_SERVER\n\nclass Supporter extends Component {\n    constructor(props) {\n        super(props)\n        const currentGroup = this.props.user.group\n\n        this.convRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\n            .orderByChild('status')\n            .startAt(2)\n            .endAt(3)\n        this.messRef = null\n\n        this.convRef.on('child_added', this.updateConversation)\n        this.convRef.on('child_changed', this.updateConversation)\n        this.messagesEnd = React.createRef()\n\n        this.state = {\n            conversations: [],\n            open: null,\n            current: [],\n            text: '',\n            dropdown: false,\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.current.length !== this.state.current.length) {\n            animateScroll.scrollToBottom({\n                containerId: 'MESSAGES'\n            })\n        }\n    }\n\n    appendToMessageList = (snap) => {\n        const msg = snap.val()\n        this.setState(({current}) => ({\n            current: [\n                ...current,\n                msg,\n            ]\n        }))\n    }\n\n    updateConversation = (snap) => {\n        const userData = this.props.user\n        const conversation = snap.val() || {}\n        conversation.$tid = snap.key\n\n        if (conversation.status !== 2 && conversation.status !== 3) return\n        if (conversation.group !== userData.group) return\n\n        // delete old conversation\n        const newConversations = this.state.conversations.filter(c => {\n            return c.$tid !== conversation.$tid\n        })\n        // add new conversation to top\n        newConversations.unshift(conversation)\n        // sort by time\n        newConversations.sort((a, b) => {\n            if (!a.lastMsg || !b.lastMsg) return 0\n            if (a.lastMsg.time > b.lastMsg.time) {\n                return -1\n            } else if (a.lastMsg.time < b.lastMsg.time) {\n                return 1\n            }\n            return 0\n        })\n\n        this.setState(({conversations}) => ({\n            conversations: newConversations\n        }))\n    }\n\n    onClickConversation = (c) => () => {\n        if (this.state.open && this.state.open.$tid === c.$tid) {\n            this.setState({\n                open: null,\n                current: [],\n                text: '',\n            })\n            if (this.messRef) this.messRef.off('child_added', this.appendToMessageList)\n            return\n        }\n\n        this.setState({\n            open: c,\n            current: [],\n            text: '',\n        })\n\n        this.messRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.user.group + '/' + c.$tid)\n            .orderByKey()\n            .limitToLast(20)\n\n        this.messRef.on('child_added', this.appendToMessageList)\n    }\n\n    _onSubmit = (c) => (e) => {\n        e.preventDefault()\n        if (this.state.text) return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            const {text} = this.state\n            axios.post(`https://${server}/pagetuyensinh/staffSendMessage`, {\n                idToken,\n                tid: c.$tid,\n                text\n            })\n                .then(resp => {\n                    const {data} = resp\n                    if (data.error) return alert(data.error)\n                    this.setState({\n                        text: '',\n                    })\n                })\n                .catch(err => alert(err.message || err))\n        })\n            .catch(e => alert(e.message || e))\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdown: !this.state.dropdown\n        })\n    }\n\n    out = () => {\n        if (!window.confirm('Bạn có chắc chắn muốn kết thúc cuộc trò chuyện này?')) return\n        firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            return axios.post(`https://${server}/pagetuyensinh/staffResetStatus`, {\n                idToken,\n                'tid': this.state.open.$tid,\n            })\n                .then(ok => {\n                    window.location.reload()\n                })\n                .catch(err => alert(err))\n        })\n    }\n\n    greet = () => {\n        return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            const c = this.state.open\n            console.log('123')\n\n            axios.post(`${process.env.REACT_APP_SERVER}/pagetuyensinh/staffSendMessage`, {\n                idToken,\n                tid: c.$tid,\n                text: this.props.user.desc,\n            })\n                .then(resp => {\n                    const {data} = resp\n                    if (data.error) return alert(data.error)\n                })\n                .catch(err => alert(err.message || err))\n        })\n            .catch(e => alert(e.message || e))\n    }\n\n    renderConversation = () => {\n        const {current, open, dropdown} = this.state\n\n        return <div className={'card mt-3 mb-3'}>\n            <div className={'card-header Title'} onClick={this.onClickConversation(open)}><b>↩ Quay lại </b> | {this.state.open.name}</div>\n            <div className=\" card-body Card\" id={'MESSAGES'}>\n                {current.map((m, i) => <div key={i} className={'Message'}>\n                    <div className={m.page ? 'Ours' : 'Yours'}>\n                        <div className={'Textt'}>{m.text}</div>\n                    </div>\n                </div>)}\n            </div>\n            <div className={'Text'}>\n                <form className={'FormMessage'} onSubmit={this._onSubmit(open)}>\n                    <div style={{\n                        width: '10%'\n                    }}>\n                        < ButtonDropdown isOpen={dropdown} toggle={this.toggle} style={{width: '10%'}}>\n                            <DropdownToggle color={'primary'}><i className='fas fa-bars'></i>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem onClick={this.greet}>\n                                    Gửi lời chào hỏi\n                                </DropdownItem>\n                                <DropdownItem onClick={this.out}>\n                                    Kết thúc chat\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                    </div>\n                    <input className={'form-control'} placeholder={'Gửi tin nhắn'} value={this.state.text}\n                           onChange={e => this.setState({text: e.target.value})}/>\n                    <div className={'SendIcon'}>\n                        <button type={'submit'} style={{color: '#fff'}}>\n                            <Icon>send\n                            </Icon>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    }\n\n    render\n    () {\n        const {user} = this.props\n        const {conversations, open} = this.state\n        const bgRead = { 'background-color': '#fff' }\n        const bgUnread = { 'background-color': '#eee' }\n\n        return (\n            <div className={'Supporter'}>\n                <AppBar position=\"static\" style={{background: '#3E8C33'}}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">Welcome to SCS</Typography>\n                    </Toolbar>\n                </AppBar>\n                <div className={'container mt-3'}>\n                    <span className=\"text-muted\">Xin chào,</span><span\n                    className={'font-weight-bold'}> {user.name}</span>\n                    {open ? this.renderConversation() :\n                        conversations.map((c, i) => <div className={'card card-body mt-3 Card'} key={i} onClick={this.onClickConversation(c)} style={c.status != 3 ? bgRead : bgUnread}>\n                            { c.status != 3\n                                ? <div className={'Title'}><b>{c.name}</b></div>\n                                : <div className={'Title'}>{c.name}</div>\n                            }\n                            <div\n                                className={'text-muted Conversation'}>{c.lastMsg.text.substring(0,100)}{c.lastMsg.text.length < 100 ? '' : '...'}</div>\n                        </div>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Supporter\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport * as firebase from 'firebase'\n\nclass NewSchool extends Component {\n    state = {\n        form: {\n            name: '',\n            key: '',\n            khoi: {\n                'tự_nhiên': false,\n                'xã_hội': false,\n                'lực_lượng_vũ_trang': false,\n                'cao_đẳng_nghề': false,\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.props.toggle()\n    }\n\n    handleSave = () => {\n        const {form} = this.state\n        const {school} = this.props\n        if (school[form.key]) alert('Mã trường trùng lặp')\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').set({\n            ...school,\n            [form.key]: {\n                name: form.name,\n                khoi: form.khoi,\n            }\n        }).then(() => {\n            this.setState({\n                form: {\n                    name: '',\n                    key: '',\n                    khoi: {\n                        'tự_nhiên': false,\n                        'xã_hội': false,\n                        'lực_lượng_vũ_trang': false,\n                        'cao_đẳng_nghề': false,\n                    }\n                }\n            })\n            this.props.toggle()\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value,\n            }\n        }))\n    }\n\n    changeCheckbox = (key) => (e) => {\n        const {checked} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                khoi: {\n                    ...form.khoi,\n                    [key]: checked\n                }\n            }\n        }))\n    }\n\n    render() {\n        const {open, toggle} = this.props\n        const {form} = this.state\n        const {khoi} = form\n\n        return (\n            <div className=\"NewSchool\">\n                <Dialog\n                    open={open}\n                    onClose={toggle}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth={'lg'}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"key\"\n                            onChange={this.changeInput('key')}\n                            label=\"Mã trường\"\n                            value={form.key}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            value={form.name}\n                            label=\"Tên trường\"\n                            fullWidth\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['tự_nhiên']}\n                                    onChange={this.changeCheckbox('tự_nhiên')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối tự nhiên\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['xã_hội']}\n                                    onChange={this.changeCheckbox('xã_hội')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối xã hội\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['lực_lượng_vũ_trang']}\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối lực lượng vũ trang\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['cao_đẳng_nghề']}\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Các trường cao đẳng nghề\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Thêm trường\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default NewSchool\n","import React, {Component} from 'react'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FolderIcon from '@material-ui/icons/AccountCircle'\nimport DeleteIcon from '@material-ui/icons/Create'\nimport * as firebase from 'firebase'\nimport Switch from '@material-ui/core/Switch'\nimport AppContext from '../../AppContext'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nclass ListSupporters extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n        firebase.database().ref(this.props.DB_PREFIX + '/users')\n            .orderByChild('group')\n            .equalTo(this.props.school)\n            .once('value').then(snap => this.updateUsers(snap))\n    }\n\n    updateUsers = (snap) => {\n        this.setState({\n            users: this.props.decodeFirebaseArray(snap.val() || {}, 'uid')\n        })\n    }\n\n    editUser = (user) => () => {\n        this.setState({\n            editUser: user ? {...user} : null,\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({editUser}) => ({\n            editUser: {\n                ...editUser,\n                [key]: value,\n            }\n        }))\n    }\n\n    handleSave = () => {\n        const {editUser} = this.state\n        firebase.database().ref(this.props.DB_PREFIX + '/users/' + editUser.$uid).set(\n            this.props.removeTempKeys(editUser)\n            , (err) => {\n                if (!err) {\n                    console.log(123)\n                    return this.editUser()()\n                }\n                alert(err)\n            })\n    }\n\n    changeSwitch = (e) => {\n        const value = e.target.checked ? 500 : 0\n        this.setState(({editUser}) => ({\n            editUser: {\n                ...editUser,\n                role: value,\n            }\n        }))\n    }\n\n    render() {\n        const {users, editUser} = this.state\n\n        return (\n            <div className=\"ListSupporters\">\n                <List dense={false}>\n                    {(!users || !users.length) &&\n                    <div className=\"d-flex justify-content-center\">\n                        <div className={'text-muted'}>Không có tư vấn viên nào thuộc trường này</div>\n                    </div>}\n                    {users.map((user, i) => <ListItem key={i}>\n                        <ListItemIcon>\n                            <FolderIcon/>\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={user.name}\n                            secondary={user.role ? null : <span className={'text-muted'}>Chưa kích hoạt</span>}\n                        />\n                        <ListItemSecondaryAction>\n                            <IconButton aria-label=\"Delete\" onClick={this.editUser(user)}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>)}\n                </List>\n                <Dialog\n                    open={editUser}\n                    onClose={this.editUser(null)}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Sửa thông tin tư vấn viên</DialogTitle>\n                    <DialogContent>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={editUser ? editUser.role === 500 : false}\n                                    onChange={this.changeSwitch}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Kích hoạt tài khoản\"\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"email\"\n                            onChange={this.changeInput('email')}\n                            label=\"Email\"\n                            value={editUser ? editUser.email : ''}\n                            type={'email'}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            label=\"Tên đầy đủ\"\n                            value={editUser ? editUser.name : ''}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"desc\"\n                            onChange={this.changeInput('desc')}\n                            label=\"Tự giới thiệu\"\n                            value={editUser ? editUser.desc : ''}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.editUser(null)} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Sửa thông tin\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <ListSupporters\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\nimport * as firebase from 'firebase'\nimport AppContext from '../../AppContext'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport moment from 'moment'\nimport {Button} from '@material-ui/core'\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props)\n        const currentGroup = this.props.school\n        console.log(currentGroup)\n        this.convRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\n            .orderByChild('status')\n            .startAt(2)\n            .endAt(3)\n        this.messRef = null\n\n        this.state = {\n            conversations: [],\n            current: [],\n            c: null,\n        }\n\n        this.convRef.on('child_added', this.updateConversation)\n        this.convRef.on('child_changed', this.updateConversation)\n    }\n\n    updateConversation = (snap) => {\n        const conversation = snap.val() || {}\n        conversation.$tid = snap.key\n\n        console.log(conversation)\n        if (conversation.status !== 2 && conversation.status !== 3) return\n        if (conversation.group !== this.props.school) return\n\n        var isnew = false\n        const newConversations = this.state.conversations.map(c => {\n            if (c.$tid === conversation.$tid) {\n                isnew = true\n                return conversation\n            }\n            return c\n        })\n        this.setState(({conversations}) => ({\n            conversations: !isnew ? [conversation, ...conversations] : newConversations\n        }))\n    }\n\n    displayMessage = (c) => () => {\n        this.setState({\n            c,\n        })\n        this.messRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.school + '/' + c.$tid)\n            .orderByKey()\n            .limitToLast(20)\n\n        this.messRef.on('child_added', this.appendToMessageList)\n    }\n\n    appendToMessageList = (snap) => {\n        const msg = snap.val()\n        this.setState(({current}) => ({\n            current: [\n                ...current,\n                msg,\n            ]\n        }))\n    }\n\n    render() {\n        const {c, current} = this.state\n\n        return (\n            <div className=\"Messages\">\n                <div className={'text-muted'}>Quản lý tin nhắn</div>\n                {c ? <div className={'card card-body'}>\n                        <div className={'d-flex justify-content-between'}>\n                            <Button>\n                                {c.name}\n                            </Button>\n                            <Button onClick={() => this.setState({c: null})}>\n                                Quay lại\n                            </Button>\n                        </div>\n                        <div className={'MessagesWrapper'}>\n                            {current.map((m, i) => <div key={i} className={'Message'}>\n                                <div className={m.page ? 'Ours' : 'Yours'}>\n                                    <div className={'Textt'}>{m.text}</div>\n                                </div>\n                            </div>)}\n                        </div>\n                    </div> :\n                    <List>\n                        {this.state.conversations.map((c, i) => <ListItem key={i}>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={`Tư vấn viên: ${c.answeredBy} - ${c.lastMsg ? 'Tin nhắn cuối: ' + moment(c.lastMsg.time).format('MMMM Do YYYY, h:mm:ss a') : ''}`}\n                            />\n\n                            <ListItemSecondaryAction>\n                                <IconButton aria-label=\"Comments\" onClick={this.displayMessage(c)}>\n                                    <CommentIcon/>\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>)}\n                    </List>\n                }\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Messages\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport * as firebase from 'firebase'\n\nclass EditSchool extends Component {\n    state = {\n        form: {\n            name: '',\n            key: '',\n            khoi: {\n                'tự_nhiên': false,\n                'xã_hội': false,\n                'lực_lượng_vũ_trang': false,\n                'cao_đẳng_nghề': false,\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.open) {\n            if (!prevProps.open || prevProps.open.key !== this.props.open.key) {\n                this.setState({\n                    form: {\n                        ...this.state.form,\n                        ...this.props.open.school,\n                        key: this.props.open.key,\n                    }\n                })\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.props.toggle()\n    }\n\n    handleSave = () => {\n        const {form} = this.state\n        const {school} = this.props\n\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').set({\n            ...school,\n            [form.key]: {\n                name: form.name,\n                khoi: form.khoi,\n            }\n        }).then(() => {\n            this.setState({\n                form: {\n                    name: '',\n                    key: '',\n                    khoi: {\n                        'tự_nhiên': false,\n                        'xã_hội': false,\n                        'lực_lượng_vũ_trang': false,\n                        'cao_đẳng_nghề': false,\n                    }\n                }\n            })\n            this.props.toggle()\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value,\n            }\n        }))\n    }\n\n    changeCheckbox = (key) => (e) => {\n        const {checked} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                khoi: {\n                    ...form.khoi,\n                    [key]: checked\n                }\n            }\n        }))\n    }\n\n    render() {\n        const {open, toggle} = this.props\n        const {form} = this.state\n        const {khoi} = form\n\n        return (\n            <div className=\"NewSchool\">\n                <Dialog\n                    open={open}\n                    onClose={toggle}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth={'lg'}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"key\"\n                            onChange={this.changeInput('key')}\n                            label=\"Mã trường\"\n                            value={form.key}\n                            fullWidth\n                            disabled\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            value={form.name}\n                            label=\"Tên trường\"\n                            fullWidth\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['tự_nhiên']}\n                                    onChange={this.changeCheckbox('tự_nhiên')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối tự nhiên\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['xã_hội']}\n                                    onChange={this.changeCheckbox('xã_hội')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối xã hội\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['lực_lượng_vũ_trang']}\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối lực lượng vũ trang\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['cao_đẳng_nghề']}\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Các trường cao đẳng nghề\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Sửa thông tin trường\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default EditSchool\n","import React, { Component } from 'react'\nimport AppContext from '../../AppContext'\nimport * as firebase from 'firebase'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport NewSchool from './NewSchool'\nimport ListSupporters from './ListSupporters'\nimport Messages from './Messages'\nimport TextField from '@material-ui/core/TextField'\nimport EditSchool from './EditSchool'\n\nfunction xoa_dau(str) {\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\n    str = str.replace(/đ/g, \"d\");\n    str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\n    str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\n    str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\n    str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\n    str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\n    str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\n    str = str.replace(/Đ/g, \"D\");\n    return str;\n}\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props)\n\n        this.schoolRef = firebase.database().ref(this.props.DB_PREFIX + '/groups')\n        this.schoolRef.on('child_added', this.updateSchool)\n        this.schoolRef.on('child_changed', this.updateSchool)\n        this.state = {\n            school: {},\n            addNewSchool: false,\n            search: '',\n        }\n    }\n\n    updateSchool = (snap) => {\n        this.setState(({ school }) => ({\n            school: {\n                ...school,\n                [snap.key]: snap.val(),\n            }\n        }))\n    }\n\n    clickSchool = (s) => () => {\n        this.setState({\n            selectedSchool: s,\n            messages: null,\n        })\n    }\n\n    clickAllMessages = (s) => () => {\n        this.setState({\n            selectedSchool: null,\n            messages: s,\n        })\n    }\n\n    _addNewSchool = () => {\n        this.setState({\n            addNewSchool: !this.state.addNewSchool,\n        })\n    }\n\n    editSchool = (key, school) => () => {\n        if (!key || !school) return this.setState({\n            editSchool: null\n        })\n        this.setState({\n            editSchool: {\n                key, school\n            }\n        })\n    }\n\n    render() {\n        const { school, selectedSchool, addNewSchool, messages, editSchool } = this.state\n\n        return (\n            <div className=\"Admin\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">SCS - Admin</Typography>\n                    </Toolbar>\n                </AppBar>\n                <div className={'container mt-3'}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={this._addNewSchool}>\n                        Thêm trường\n                    </Button>\n                    <br />\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Tìm kiếm theo tên trường\"\n                        margin=\"normal\"\n                        variant='outlined'\n                        fullWidth\n                        value={this.state.search}\n                        onChange={(e) => {\n                            const { value } = e.target\n                            this.setState({ search: value })\n                        }}\n                    />\n                    <NewSchool\n                        open={addNewSchool}\n                        toggle={this._addNewSchool}\n                        school={school}\n                        {...this.props}\n                    />\n                    <EditSchool\n                        open={editSchool}\n                        toggle={this.editSchool()}\n                        school={school}\n                        {...this.props}\n                    />\n                    {selectedSchool ? <div className={'card mt-3'}>\n                        <div className={'card-header'}>\n\n                            <div className=\"d-flex justify-content-between\">\n                                <Button>\n                                    {school[selectedSchool].name}\n                                </Button>\n                                <Button onClick={() => this.setState({\n                                    selectedSchool: null,\n                                })}>\n                                    Quay lại\n                                </Button>\n                            </div>\n                        </div>\n                        <div className={'card-body'}>\n                            <div className=\"text-muted\">Quản lý danh sách tư vấn viên</div>\n                            <ListSupporters school={selectedSchool} />\n                        </div>\n                    </div> : messages ? <div className={'card mt-3'}>\n                        <div className={'card-header'}>\n\n                            <div className=\"d-flex justify-content-between\">\n                                <Button>\n                                    {school[messages].name}\n                                </Button>\n                                <Button onClick={() => this.setState({\n                                    messages: null,\n                                })}>\n                                    Quay lại\n                                    </Button>\n\n                            </div>\n                        </div>\n                        <div className={'card-body'}>\n                            <Messages school={messages} />\n                        </div>\n                    </div> : <div className='row'>\n                                {Object.keys(school).filter(s => {\n                                    const sc = school[s]\n                                    return xoa_dau(sc.name.toLowerCase()).includes(xoa_dau(this.state.search.toLocaleLowerCase()))\n                                }).map((s, i) => <div className='col-12 col-md-6 col-lg-6 col-xl-6' key={i}><div className={'card card-body mt-3 Card'}>\n                                    <span\n                                        onClick={this.clickSchool(s)}\n                                        className={'Cursor'}\n                                    >\n                                        {school[s].name}\n                                    </span>\n                                    <Button\n                                        onClick={this.clickAllMessages(s)}\n                                    >\n                                        Xem tin nhắn\n                            </Button>\n                                    <Button\n                                        onClick={this.clickSchool(s)}\n                                    >\n                                        Quản lý tư vấn viên\n                            </Button>\n                                    <Button\n                                        onClick={this.editSchool(s, school[s])}\n                                    >\n                                        Sửa thông tin trường\n                            </Button>\n                                </div>\n                                </div>)}\n                            </div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Admin\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\nimport AppContext from './AppContext'\nimport PropTypes from 'prop-types'\nimport {withStyles} from '@material-ui/core/styles'\nimport * as firebase from 'firebase'\nimport Register from './containers/register/Register'\nimport Init from './containers/init/Init'\nimport Supporter from './layouts/supporter/Supporter'\nimport Admin from './layouts/admin/Admin'\nimport NewUser from './containers/new-user/NewUser'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nconst DB_PREFIX = process.env.REACT_APP_DB_PREFIX\n\nconst config = {\n    apiKey: 'AIzaSyBxBvZZPxo06HQWHWudRGytuJoSNw5LNX8',\n    authDomain: 'localhost',\n    databaseURL: 'https://page-tuyen-sinh.firebaseio.com',\n    projectId: 'page-tuyen-sinh',\n    storageBucket: 'page-tuyen-sinh.appspot.com',\n    messagingSenderId: '497060879105'\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        if (!firebase.apps.length) {\n            firebase.initializeApp(config);\n        }\n        this.state = {\n            appState: null,\n            DB_PREFIX,\n        }\n    }\n\n    componentWillMount() {\n        this._doLogin()\n    }\n\n    _doLogin = () => {\n        const urlParams = new URLSearchParams(window.location.search)\n        const email = urlParams.get('email')\n        const password = urlParams.get('password')\n\n        if (!email) return this.setState({\n            appState: 'new_user'\n        })\n\n        this.setState({\n            appState: 'loading',\n            email,\n            password,\n        })\n\n        firebase.auth().signInWithEmailAndPassword(\n            email, password\n        ).then((data) => {\n            this.setState({\n                uId: data.$uid\n            })\n            this._getUserInfo(data.user.uid)\n        }).catch((error) => {\n            if (error.message === 'The password is invalid or the user does not have a password.') return alert('Sai mật khẩu')\n            this._doRegister(email, password)\n        })\n    }\n\n    _getUserInfo = (uid) => {\n        firebase.database().ref(DB_PREFIX + '/users/' + uid).once('value')\n            .then(snap => {\n                firebase.database().ref(DB_PREFIX + '/groups').once('value').then(gr => {\n                    var groups = gr.val()\n                    console.log(groups)\n                    var userData = snap.val() || {}\n                    userData.$uid = uid\n                    if (!userData.role) {\n                        this.setState({\n                            appState: 'register',\n                            uid,\n                            groups,\n                            isLocked: userData.role === 0\n                        })\n                    } else {\n                        const {role} = userData\n                        this.setState({\n                            appState: role === 1000 ? 'admin' : 'supporter',\n                            user: userData,\n                        })\n                    }\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    _doRegister = (email, password) => {\n        this.setState({\n            appState: 'init',\n        })\n\n        return firebase.auth().createUserWithEmailAndPassword(\n            email, password\n        ).then(() => {\n            this._doLogin()\n        }).catch((e) => {\n            alert('Có lỗi xảy ra, vui lòng báo lại với admin')\n        })\n    }\n\n    _register = (user) => {\n        const userId = this.state.uid\n        return firebase.database().ref(DB_PREFIX + '/users/' + userId).set(\n            this.removeTempKeys(user)\n            , (err) => {\n                if (err) {\n                    console.log(err)\n                    alert('Có lỗi xảy ra')\n                }\n                this.setState({\n                    isLocked: true\n                })\n                alert('Đăng ký thành công, hãy chờ admin duyệt tài khoản của bạn')\n            });\n    }\n\n    _changeState = (changedState) => this.setState(changedState)\n\n    decodeFirebaseArray = (arr, id_name) => {\n        if (!arr || Array.isArray(arr)) return arr;\n        return Object.keys(arr).map(function (key) {\n            arr[key]['$' + id_name] = key;\n            return arr[key];\n        });\n    }\n\n    removeTempKeys = (obj) => {\n        var nObj = Object.assign({}, obj);\n        Object.keys(nObj).forEach(function (key) {\n            if (key.startsWith('$')) delete nObj[key];\n        });\n        return nObj;\n    }\n\n    renderApp = () => {\n        const {appState} = this.state\n        const combinedProps = {\n            ...this.props,\n            ...this.state,\n        }\n        if (appState === 'loading') return <p><center><br/><br/><img src=\"https://raw.githubusercontent.com/manh16nd/chon-truong/master/loading.gif\" /></center></p>\n        if (appState === 'init') return <Init/>\n        if (appState === 'register') return <Register {...combinedProps}/>\n        if (appState === 'supporter') return <Supporter {...combinedProps}/>\n        if (appState === 'admin') return <Admin {...combinedProps}/>\n        return null\n    }\n\n    render() {\n\n        return (\n            <AppContext.Provider\n                value={{\n                    app: this.state,\n                    changeState: this._changeState,\n                    register: this._register,\n                    removeTempKeys: this.removeTempKeys,\n                    decodeFirebaseArray: this.decodeFirebaseArray,\n                    DB_PREFIX,\n                }}\n            >\n                {this.renderApp()}\n            </AppContext.Provider>\n        )\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(App)\n","import React, {Component} from 'react'\nimport * as firebase from 'firebase'\nimport AppContext from '../../AppContext'\n\nclass NewUser extends Component {\n    state = {form: {role: 500}, loading: false,}\n\n    _onChangeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value\n            }\n        }))\n    }\n\n    _onSubmit = (e) => {\n        e.preventDefault()\n        this.setState({\n            loading: true,\n        })\n\n        const {email, password, repassword} = this.state.form\n        if (password !== repassword) return alert('Nhập lại mật khẩu')\n\n        firebase.auth().createUserWithEmailAndPassword(\n            email, password\n        )\n            .then(() => {\n                return firebase.auth().signInWithEmailAndPassword(email, password)\n                    .then(data => {\n                        const uId = data.$uid\n                        const {password, repassword, ...restUser} = this.state.form\n                        return firebase.database().ref(this.props.DB_PREFIX + '/users/' + uId).set(\n                            this.props.removeTempKeys(restUser)\n                            , (err) => {\n                                if (err) {\n                                    console.log(err)\n                                    alert('Có lỗi xảy ra')\n                                }\n                                alert('Đăng ký thành công, hãy chờ admin duyệt tài khoản của bạn')\n                            })\n                    })\n                    .catch(e => {\n                        console.log(e)\n                    })\n            })\n            .catch(e => {\n                const {code} = e\n                if (code === 'auth/email-already-in-use') return alert('Email này đã được sử dụng')\n                alert('Có lỗi xảy ra, vui lòng báo lại với admin')\n            })\n    }\n\n    render() {\n        const {form, loading} = this.state\n\n        return (\n            <div className=\"NewUser mt-5\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\">\n                        <p className={'text-muted'}>Đăng ký tài khoản</p>\n                        <form onSubmit={this._onSubmit}><label htmlFor={'email'}>Email</label>\n                            <input\n                                className={'form-control'}\n                                id={'email'}\n                                value={form.email}\n                                autoComplete={'false'}\n                                onChange={this._onChangeInput('email')}\n                            />\n                            <label htmlFor={'password'}>Mật khẩu</label>\n                            <input\n                                className={'form-control'}\n                                id={'password'}\n                                value={form.password}\n                                autoComplete={'false'}\n                                onChange={this._onChangeInput('password')}\n                                type={'password'}\n                            />\n                            <label htmlFor={'repassword'}>Nhập lại mật khẩu</label>\n                            <input\n                                className={'form-control'}\n                                id={'repassword'}\n                                value={form.repassword}\n                                autoComplete={'false'}\n                                onChange={this._onChangeInput('repassword')}\n                                type={'password'}\n                            />\n                            <label htmlFor={'name'}>Tên đầy đủ</label>\n                            <input\n                                className={'form-control'}\n                                value={form.name}\n                                id={'name'}\n                                autoComplete={'off'}\n                                onChange={this._onChangeInput('name')}\n                            />\n                            <label htmlFor={'group'}>Mã trường</label>\n                            <input\n                                className={'form-control'}\n                                value={form.group}\n                                id={'group'}\n                                onChange={this._onChangeInput('group')}\n                                autoComplete={'off'}\n                            />\n                            <label htmlFor={'desc'}>Lời chào</label>\n                            <input\n                                className={'form-control'}\n                                value={form.desc}\n                                id={'desc'}\n                                autoComplete={'off'}\n                                onChange={this._onChangeInput('desc')}\n                            />\n                            <button className={'btn btn-primary mt-3'} type={'submit'} disabled={loading}>Đăng ký tài\n                                khoản\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <NewUser\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport './scss/index.scss'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}